import matplotlib.pyplot as plt
import numpy as np
import scipy.stats as st

# 128-bit keys
x = [27,27,27,27,27,27,27,27,27,27,27,27,34,34,34,18,18,18,18,18,18,18,18,18,32,32,32,32,32,32,32,32,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,30,30,30,30,30,30,30,30,30,30,30,41,16,16,16,16,16,20,20,20,20,20,20,20,20,20,39,37,37,37,37,13,11,11,9]

# 512-bit keys
#x = [22,22,22,22,22,22,22,22,22,28,28,28,28,26,26,26,26,26,23,23,23,23,23,23,23,23,25,25,25,25,25,19,19,19,30,30,30,30,28,28,28,28,28,28,24,24,24,24,24,24,24,24,24,18,18,22,22,22,22,22,21,21,21,29,29,29,29,25,25,25,25,25,25,25,25,25,25,23,23,23,23,23,23,23,26,26,26,27,27,27,20,20,20,16,34,21,21,16,33,18]


l = plt.hist(x, density=True, bins=10, label="QBER")
mn, mx = plt.xlim()
plt.xlim(mn, mx)
kde_xs = np.linspace(mn, mx, 301)
kde = st.gaussian_kde(x)
plt.plot(kde_xs, kde.pdf(kde_xs))
plt.ylabel('Probabilit√†')
plt.xlabel('QBER (%)')
plt.show()


